
cmake_minimum_required(VERSION 3.5)
project(vmi-player)

add_compile_definitions(GLEW_STATIC=1)
add_compile_definitions(GLFW_INCLUDE_NONE GLFW_EXPOSE_NATIVE_WGL GLFW_EXPOSE_NATIVE_WIN32)
add_compile_definitions(GLM_FORCE_MESSAGES GLM_FORCE_SWIZZLE)
add_compile_definitions(WIN32_LEAN_AND_MEAN NOMINMAX)

add_executable(vmi-player)

target_sources(vmi-player PRIVATE main.cpp)
target_sources(vmi-player PRIVATE __WindowsApi.h)
target_sources(vmi-player PRIVATE _GLEWApi.h _GLFWApi.h _GLMApi.h _ImGuiApi.h _NVApi.h _OpenGLApi.h _OpenVRApi.h)
target_sources(vmi-player PRIVATE CppUtils.cpp CppUtils.h)
target_sources(vmi-player PRIVATE DisplayConfiguration.cpp DisplayConfiguration.h)
target_sources(vmi-player PRIVATE OpenGLUtils.cpp OpenGLUtils.h)
target_sources(vmi-player PRIVATE OpenVRUtils.cpp OpenVRUtils.h)
target_sources(vmi-player PRIVATE RenderPoints.h RenderPoints.cpp)
target_sources(vmi-player PRIVATE StereoDisplay.h StereoDisplay.cpp)
target_sources(vmi-player PRIVATE Utils.cpp Utils.h)
target_sources(vmi-player PRIVATE Watchdog.cpp Watchdog.h)
target_sources(vmi-player PRIVATE sdks/wrapper/Wrapper.cpp sdks/wrapper/Wrapper.h)

target_include_directories(vmi-player PRIVATE $ENV{CUDA_PATH}/include)
target_include_directories(vmi-player PRIVATE sdks/glew/include)
target_include_directories(vmi-player PRIVATE sdks/glfw/include)
target_include_directories(vmi-player PRIVATE sdks/glm)
target_include_directories(vmi-player PRIVATE sdks/wrapper)
target_include_directories(vmi-player PRIVATE sdks/wrapper/HWWrapper/include)
target_include_directories(vmi-player PRIVATE sdks/nvapi)
target_include_directories(vmi-player PRIVATE sdks/openvr/headers)

target_link_libraries(vmi-player OpenGL32 DXGI)
target_link_libraries(vmi-player $ENV{CUDA_PATH}/lib/x64/cuda.lib)
target_link_libraries(vmi-player debug     ../sdks/glew/lib/libglew32d)
target_link_libraries(vmi-player optimized ../sdks/glew/lib/libglew32)
target_link_libraries(vmi-player ../sdks/glfw/lib-vc2017/glfw3dll)
target_link_libraries(vmi-player ../sdks/wrapper/HWWrapper/lib/x64/HWWrapper)
target_link_libraries(vmi-player ../sdks/nvapi/amd64/nvapi64)
target_link_libraries(vmi-player ../sdks/openvr/lib/win64/openvr_api)
